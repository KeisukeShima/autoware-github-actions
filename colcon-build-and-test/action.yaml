name: colcon-build-and-test
description: ""

inputs:
  rosdistro:
    description: ""
    required: true
  target-packages:
    description: ""
    required: true
  build-depends-repos:
    description: ""
    required: false
  token:
    description: ""
    required: false
    default: ${{ github.token }}
  test-labels:
    description: ""
    required: false
    default: ""
outputs:
  coverage-files:
    description: ""
    value: ${{ steps.test.outputs.coverage-files }}

runs:
  using: composite
  steps:
    - name: Show target packages
      run: |
        echo "target packages: ${{ inputs.target-packages }}"
      shell: bash

    - name: Install pip for rosdep
      run: |
        sudo apt-get -yqq update
        sudo apt-get -yqq install python3-pip
      shell: bash

    - name: Clone dependency packages
      if: ${{ inputs.build-depends-repos != ''}}
      run: |
        git config --local --unset-all http.https://github.com/.extraheader || true
        git config --global url.https://x-access-token:${{ inputs.token }}@github.com.insteadOf 'https://github.com'
        mkdir dependency_ws
        vcs import dependency_ws < ${{ inputs.build-depends-repos }}
      shell: bash

    - name: Run rosdep install
      run: |
        sudo apt-get -yqq update
        rosdep update
        DEBIAN_FRONTEND=noninteractive rosdep install -yqq --from-paths . --ignore-src --rosdistro ${{ inputs.rosdistro }}
      shell: bash

    - name: Set up colcon-mixin
      run: |
        colcon mixin add default https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml || true
        colcon mixin update default
      shell: bash

    - name: Build
      run: |
        . /opt/ros/${{ inputs.rosdistro }}/setup.sh
        colcon build --event-handlers console_cohesion+ \
          --packages-above-and-dependencies ${{ inputs.target-packages }} \
          --cmake-args -DCMAKE_BUILD_TYPE=Release \
          --mixin coverage-gcc coverage-pytest compile-commands
      shell: bash

    - name: Install packages for coverage commands
      run: |
        sudo apt-get -yqq update
        sudo apt-get -yqq install lcov
        pip3 install colcon-lcov-result colcon-coveragepy-result
      shell: bash

    - name: Test
      id: test
      run: |
        set -e

        . /opt/ros/${{ inputs.rosdistro }}/setup.sh


        coverage_files=()
        if [[ "${{ inputs.test-labels }}" = "" ]] ; then
          colcon lcov-result --initial --verbose --packages-above ${{ inputs.target-packages }}
          colcon test --event-handlers console_cohesion+ \
            --mixin coverage-pytest \
            --packages-above ${{ inputs.target-packages }} \
            --return-code-on-test-failure
          colcon lcov-result --verbose --packages-above ${{ inputs.target-packages }} || true
          colcon coveragepy-result --verbose --packages-above ${{ inputs.target-packages }} || true

          coverage_files+=("lcov/total_coverage.info")
          coverage_files+=("coveragepy/.coverage")
        else
          # Split the test labels into an array
          tmp="${{ inputs.test-labels }}"
          IFS=, eval 'input_labels=(${tmp})'

          for label in "${input_labels[@]}"; do
            echo "Executing labeled test: $label"
            colcon lcov-result \
              --initial \
              --verbose \
              --packages-above ${{ inputs.target-packages }} \
              --lcov-base lcov_$label
            colcon test --event-handlers console_cohesion+ \
              --mixin coverage-pytest \
              --packages-above ${{ inputs.target-packages }} \
              --ctest-args -L "$label" \
              --return-code-on-test-failure
            colcon lcov-result \
              --verbose \
              --packages-above ${{ inputs.target-packages }} \
              --lcov-base lcov_$label || true
            colcon coveragepy-result \
              --verbose \
              --packages-above ${{ inputs.target-packages }} \
              --coveragepy-base coveragepy_$label || true

            coverage_files+=(lcov_$label/total_coverage.info)
            coverage_files+=(coveragepy_$label/.coverage)
          done
        fi

        # Join coverage file names
        IFS=, eval 'coverage_files_str="${coverage_files[*]}"'
        echo ::set-output name=coverage-files::$coverage_files_str
      shell: bash

    - name: Cache build artifacts
      uses: actions/cache@v2
      with:
        path: |
          ./build
          ./install
          ./lcov
          ./coveragepy
        key: build-${{ github.sha }}

name: "generate-docs"
description: "Generate documentation for the project"

inputs:
  mkdocs-yaml:
    description: "Path to the mkdocs.yaml file"
    required: true
  version-name:
    description: "Version name to use in the documentation"
    required: true
  github-access-token:
    description: "If the repository is private, specify a token."
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # Fetch with depth=0 to push to gh-pages
        fetch-depth: 0

    - name: Install MkDocs
      run: |
        python3 -m pip install --upgrade pip setuptools wheel
        pip3 install -r ${GITHUB_ACTION_PATH}/mkdocs-requirements.txt
      shell: bash

    - name: Remove non-document files
      run: |
        find . -type f \
            -not -path './.git/*' \
            -not -path './.github/*' \
            -not -path './${{ inputs.mkdocs-yaml }}' \
            -not -name '*.md' \
            -not -name '*.svg' \
            -not -name '*.png' \
            -not -name '*.css' \
          | xargs -I {} rm "{}"
      shell: bash

    - name: Build MkDocs
      run: |
        mkdocs build -f ${{ inputs.mkdocs-yaml }} --verbose --clean
      shell: bash

    - name: Set git config
      run: |
        git config --local --unset-all http.https://github.com/.extraheader || true
        git config --global url.https://x-access-token:${{ inputs.github-access-token }}@github.com.insteadOf 'https://github.com'
        git config --global user.name github-actions
        git config --global user.email github-actions@github.com
      shell: bash

    - name: Deploy
      run: |
        git fetch
        mike deploy -F ${{ inputs.mkdocs-yaml }} --push --rebase ${{ inputs.version-name }}
      shell: bash

    - name: Create comment body
      if: ${{ github.event.pull_request }}
      id: create-comment-body
      run: |
        site_url=$(grep -oP "site_url:\s+\K(.*)" ${{ inputs.mkdocs-yaml }})
        base_url="${site_url}/pr-${{ github.event.pull_request.number }}/"
        ${GITHUB_ACTION_PATH}/create-doc-comment.sh "${base_url}" "origin/${{ github.event.pull_request.base.ref }}"
      shell: bash

    - name: Find PR comment
      if: ${{ github.event.pull_request }}
      id: find-comment
      uses: peter-evans/find-comment@v1
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: "github-actions[bot]"
        body-includes: Documentation

    - name: Update PR comment
      if: ${{ github.event.pull_request }}
      uses: peter-evans/create-or-update-comment@v1
      with:
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        token: ${{ inputs.github-access-token }}
        body: |
          ${{ steps.create-comment-body.outputs.comment-body }}
        edit-mode: replace
